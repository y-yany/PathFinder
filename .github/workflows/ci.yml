# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "develop" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: --health-cmd "pg_isready -d rails_test -U rails" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.3'
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database
        run: |
            cp config/database.ci.yml config/database.yml
            bundle exec rails db:create RAILS_ENV=test
            bundle exec rails db:migrate RAILS_ENV=test
      # Add or replace test runners here
      - name: Run rspec
        run: bundle exec rspec --format documentation

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.3'
          bundler-cache: true
      - name: Generate binstubs
        run: bundle binstubs rubocop
      # Add or replace any other lints here
      - name: Lint Ruby files
        run: bin/rubocop --parallel
